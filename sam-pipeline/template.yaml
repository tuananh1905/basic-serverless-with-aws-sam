AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-pipeline

  Sample SAM Template for sam-pipeline

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5
    MemorySize: 256

Parameters:
  StageName:
    Type: String
    Description: Stage name
    Default: prod

Resources:
  AppApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: IAM authorizer REST API demo
      StageName: !Sub ${StageName}
      Auth:
        DefaultAuthorizer: AWS_IAM

  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello_world
      Handler: app.lambda_handler
      Runtime: python3.8
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            # Path: !Join ["/", [!Ref "AWS::StackName", "hello"]]
            # Path: /stag/hello/
            # Path: !Join ["", ["/", !Ref "AWS::StackName", "/", "hello", "/"]]
            # Path: !Sub "/${StageName}/hello"
            # Path: !Sub
            #   - /${StackName}/hello
            #   - StackName: !Ref "AWS::StackName"
            RestApiId: !Ref AppApi
            Path: hello/
            Method: get
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Sub ${StageName}
      Cors: "'*'"
      Auth:
        DefaultAuthorizer: MyCognitoAuthorizer
        Authorizers:
          MyCognitoAuthorizer:
            UserPoolArn: !GetAtt InfrastructureStack.Outputs.CognitoUserPoolArn

  MyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hello_world
      Handler: app.lambda_handler
      Runtime: python3.8
      Events:
        Root:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /
            Method: GET
  # AdminTest:
  #   Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
  #   Properties:
  #     CodeUri: hello_world
  #     Handler: app.lambda_handler
  #     Runtime: python3.8
  #     Architectures:
  #       - x86_64
  #     Events:
  #       GetAdminEndpoint:
  #         Type: Api
  #         Properties:
  #           Path: /admin-only
  #           Method: GET
  #           # RestApiId: !Ref MyApi
  #           Auth:
  #             DefaultAuthorizer: MyCognitoAuthorizer
  #             Authorizers:
  #               MyCognitoAuthorizer:
  #                 UserPoolArn: !GetAtt InfrastructureStack.Outputs.CognitoUserPoolArn
  #                 Identity:
  #                   Header: Authorization
  #                   ValidationExpression: '^Bearer [-0-9a-zA-Z\._]*$'
  #                   ReauthorizeEvery: 300
  #             ResourcePolicy:
  #               CustomStatements:
  #                 - Effect: "Deny"
  #                   Action: "execute-api:Invoke"
  #                   Resource: "execute-api:/*/*/*/admin-only"
  #                   Condition:
  #                     StringNotEquals:
  #                       cognito:preferred_role: !GetAtt InfrastructureStack.Outputs.CognitoAdminGroupArn

AdminOnlyFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      Runtime: python3.8
      Events:
        AdminOnlyApi:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /adminonly
            Method: get

CommonFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      Runtime: python3.8
      Events:
        CommonApi:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /common
            Method: get


  InfrastructureStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./infrastructure/infrastructure.yaml
      Parameters:
        TableName: !Sub "${StageName}-nguyen-tran-clinic"
        StageName: !Sub ${StageName}
        AppName: "dmcs"

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  # HelloWorldApi:
  #   Description: "API Gateway endpoint URL for Prod stage for Hello World function"
  #   Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/hello/"
  # HelloWorldFunction:
  #   Description: "Hello World Lambda Function ARN"
  #   Value: !GetAtt HelloWorldFunction.Arn
  # HelloWorldFunctionIamRole:
  #   Description: "Implicit IAM Role created for Hello World function"
  #   Value: !GetAtt HelloWorldFunctionRole.Arn
  AppApiEndpoint:
    Description: API Endpoint
    Value: !Sub "https://${AppApi}.execute-api.${AWS::Region}.amazonaws.com/${AWS::StackName}"
  CommonApiId:
    Description: "API ID"
    Value: !Ref CommonApi
